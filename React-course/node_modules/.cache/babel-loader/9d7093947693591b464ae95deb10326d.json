{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RAF\\\\Desktop\\\\Carpeta Trabajo\\\\React-course\\\\src\\\\Components\\\\ReactHookForms.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Button, TextField } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReactHookForms = () => {\n  _s();\n\n  var _errors$apellido;\n\n  //Recibira una register, errores y una funcion\n  //La funcion es llevada directamente al formulario y al onSubmit\n  //const {register, errors, handleSubmit} = useForm();\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit\n  } = useForm(); //Otra cosa que cambio, es como se declaran los errores ahora se tiene que hacer de esta manera\n\n  const [persona, setPersona] = useState({\n    nombre: '',\n    apellido: ''\n  });\n\n  const login = (data, e) => {\n    console.log(data); //La variable e es un evento, tiene el mismo uso que lo visto anteriormente\n\n    setPersona({ ...persona,\n      data\n    });\n    console.log(data.nombre);\n    console.log(persona);\n    e.target.reset();\n  }; //Antenerioment se declaraba con un ref el valor, ahora no se tiene que hacer de la manera como se ha hecho en el codigo\n  //Desde la version 7.0 se comenzo a implementar esta forma o nomenclatura\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(login),\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"El formulario funciona, solo hay que darle estilo que se desea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register(\"nombre\", {\n          required: {\n            value: true,\n            message: 'Nombre obligatorio'\n          }\n        }),\n        name: \"nombre\",\n        label: \"Nombre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: errors.nombre && errors.nombre.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register(\"apellido\", {\n          required: {\n            value: true,\n            message: 'Apellido obligatorio'\n          }\n        }),\n        name: \"apellido\",\n        label: \"Apellido\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: errors === null || errors === void 0 ? void 0 : (_errors$apellido = errors.apellido) === null || _errors$apellido === void 0 ? void 0 : _errors$apellido.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Aceptar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReactHookForms, \"z85sKJgXJWCJhfmb/Ylmtm5F4is=\", false, function () {\n  return [useForm];\n});\n\n_c = ReactHookForms;\nexport default ReactHookForms;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactHookForms\");","map":{"version":3,"sources":["C:/Users/RAF/Desktop/Carpeta Trabajo/React-course/src/Components/ReactHookForms.js"],"names":["React","useState","useForm","Button","TextField","ReactHookForms","register","formState","errors","handleSubmit","persona","setPersona","nombre","apellido","login","data","e","console","log","target","reset","required","value","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,OAAT,QAAuB,iBAAvB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAiC,mBAAjC;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAAA;;AAEzB;AACA;AACA;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAaC,IAAAA,SAAS,EAAC;AAACC,MAAAA;AAAD,KAAvB;AAAiCC,IAAAA;AAAjC,MAAkDP,OAAO,EAA/D,CALyB,CAMzB;;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC;AACnCW,IAAAA,MAAM,EAAC,EAD4B;AAEnCC,IAAAA,QAAQ,EAAC;AAF0B,GAAD,CAAtC;;AAKA,QAAMC,KAAK,GAAE,CAACC,IAAD,EAAOC,CAAP,KAAW;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EADoB,CAEpB;;AACAJ,IAAAA,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAaK,MAAAA;AAAb,KAAD,CAAV;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACH,MAAjB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AACAM,IAAAA,CAAC,CAACG,MAAF,CAASC,KAAT;AACH,GAPD,CAZyB,CAqBzB;AACA;;;AACA,sBACI;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEX,YAAY,CAACK,KAAD,CAA5B;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD,OACQR,QAAQ,CAAC,QAAD,EAAW;AACnBe,UAAAA,QAAQ,EAAE;AACNC,YAAAA,KAAK,EAAC,IADA;AAENC,YAAAA,OAAO,EAAC;AAFF;AADS,SAAX,CADhB;AAOI,QAAA,IAAI,EAAC,QAPT;AAQI,QAAA,KAAK,EAAC;AARV;AAAA;AAAA;AAAA;AAAA,cAFJ,eAYI;AAAA,kBAAOf,MAAM,CAACI,MAAP,IAAiBJ,MAAM,CAACI,MAAP,CAAcW;AAAtC;AAAA;AAAA;AAAA;AAAA,cAZJ,eAaI,QAAC,SAAD,OACQjB,QAAQ,CAAC,UAAD,EAAY;AACpBe,UAAAA,QAAQ,EAAE;AACNC,YAAAA,KAAK,EAAC,IADA;AAENC,YAAAA,OAAO,EAAC;AAFF;AADU,SAAZ,CADhB;AAOI,QAAA,IAAI,EAAC,UAPT;AAQI,QAAA,KAAK,EAAC;AARV;AAAA;AAAA;AAAA;AAAA,cAbJ,eAuBI;AAAA,kBACKf,MADL,aACKA,MADL,2CACKA,MAAM,CAAEK,QADb,qDACK,iBAAkBU;AADvB;AAAA;AAAA;AAAA;AAAA,cAvBJ,eA0BI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH,CAxDD;;GAAMlB,c;UAKsDH,O;;;KALtDG,c;AA0DN,eAAeA,cAAf","sourcesContent":["import React,{useState} from 'react';\r\nimport { useForm} from 'react-hook-form';\r\nimport { Button, TextField} from '@material-ui/core';\r\n\r\nconst ReactHookForms = () => {\r\n\r\n    //Recibira una register, errores y una funcion\r\n    //La funcion es llevada directamente al formulario y al onSubmit\r\n    //const {register, errors, handleSubmit} = useForm();\r\n    const { register,  formState:{errors}, handleSubmit } = useForm();\r\n    //Otra cosa que cambio, es como se declaran los errores ahora se tiene que hacer de esta manera\r\n    const [persona, setPersona] = useState({\r\n        nombre:'',\r\n        apellido:''\r\n    });\r\n\r\n    const login =(data, e)=>{\r\n        console.log(data);\r\n        //La variable e es un evento, tiene el mismo uso que lo visto anteriormente\r\n        setPersona({...persona, data})\r\n        console.log(data.nombre);\r\n        console.log(persona); \r\n        e.target.reset();\r\n    }\r\n\r\n    //Antenerioment se declaraba con un ref el valor, ahora no se tiene que hacer de la manera como se ha hecho en el codigo\r\n    //Desde la version 7.0 se comenzo a implementar esta forma o nomenclatura\r\n    return ( \r\n        <div>\r\n            <form onSubmit={handleSubmit(login)}>\r\n                <h1>El formulario funciona, solo hay que darle estilo que se desea</h1>\r\n                <TextField\r\n                    {...register(\"nombre\", { \r\n                        required: {\r\n                            value:true, \r\n                            message:'Nombre obligatorio'\r\n                            }\r\n                        })}\r\n                    name=\"nombre\"\r\n                    label=\"Nombre\"\r\n                />\r\n                <span>{errors.nombre && errors.nombre.message}</span>\r\n                <TextField \r\n                    {...register(\"apellido\",{\r\n                        required: {\r\n                            value:true, \r\n                            message:'Apellido obligatorio'\r\n                            }\r\n                        })}\r\n                    name=\"apellido\"\r\n                    label=\"Apellido\"\r\n                />\r\n                <span>\r\n                    {errors?.apellido?.message}\r\n                </span>\r\n                <Button type=\"submit\">Aceptar</Button>\r\n            </form>\r\n        </div>\r\n\r\n     );\r\n}\r\n \r\nexport default ReactHookForms;"]},"metadata":{},"sourceType":"module"}